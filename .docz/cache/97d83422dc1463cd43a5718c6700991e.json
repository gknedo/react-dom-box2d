{"remainingRequest":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-react-jsx\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js","dependencies":[{"path":"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js","mtime":1546169547890},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { b2World, b2Vec2, b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2CircleShape, b2BodyType } from \"@flyover/box2d\";\nimport { fromPhysicsToCanvas, fromCanvasToPhysics, fromCanvasToDom, fromDomToCanvas, setDomPosition, makeEnclosedBox, TWO_NUMBERS_OPTIONAL } from './Utils';\nimport { getApproxImpactFromContact, getBodyBCategory, getBodyACategory } from './ContactUtils';\n\nvar _React$createContext = React.createContext(),\n    Provider = _React$createContext.Provider,\n    Consumer = _React$createContext.Consumer;\n\nvar Box2dWorld =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Box2dWorld, _Component);\n\n  function Box2dWorld(props) {\n    var _this;\n\n    _classCallCheck(this, Box2dWorld);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Box2dWorld).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderPhysics\", function () {\n      //box2d libs typically implement linkedlist for fast looping\n      for (var b = _this.world.m_bodyList; b; b = b.m_next) {\n        // if(this.worldChangeStatus>0){\n        // \tb.SetAwake(true);\n        // \tthis.worldChangeStatus = 1;\n        // }\n        if (!b.IsAwake()) {\n          //if the body is sleeping , why bother\n          continue; //I probably could optimize static bodies render only once. But not now\n        }\n\n        var userData = b.GetUserData();\n\n        if (userData && userData.dom) {\n          console.log('userData', userData);\n\n          if (userData.removed) {\n            //this is the most convenient place to do this. I should probably rename the method \n            //console.log('body removing',b);\n            _this.world.DestroyBody(b); //this.worldChangeStatus=2;\n\n          } else {\n            var _b$GetPosition = b.GetPosition(),\n                x = _b$GetPosition.x,\n                y = _b$GetPosition.y;\n\n            var angle = b.GetAngle(); //sidestepping whole React and applying css transforms directly to the dom nodes directly (seems simpler this way , hopefully more performant)\n            //(dom,x,y,rotation,SCALE)\n\n            setDomPosition(userData.dom, x, y, angle, _this.SCALE);\n          }\n        }\n      } // if(this.worldChangeStatus===1){\n      // \tthis.worldChangeStatus=0;\n      // }\n\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"physLoop\", function () {\n      _this.rafId = undefined;\n\n      _this.world.Step(1 / 60 //frame-rate (just hoping typical 60hz. in future, planning to use webworkers for uninterrupted physics simulation)\n      , 10 //velocity iterations\n      , 10 //position iterations\n      );\n\n      _this.world.ClearForces();\n\n      _this.renderPhysics();\n\n      _this.physLoopStart(); //console.log('physLoop running');\n\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"physLoopStart\", function () {\n      if (!_this.rafId) {\n        _this.rafId = window.requestAnimationFrame(_this.physLoop);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getChildrenMapped\", function () {\n      return React.Children.map(_this.props.children, function (child) {\n        if (child.type._internalType === 'Box2dObject') {\n          return React.cloneElement(child, {\n            worldRef: _assertThisInitialized(_assertThisInitialized(_this))\n          });\n        } else {\n          return child;\n        }\n      });\n    });\n\n    var width = props.width,\n        height = props.height,\n        _props$gravity = props.gravity,\n        gravity = _props$gravity === void 0 ? [0, 10] : _props$gravity,\n        _props$allowSleep = props.allowSleep,\n        allowSleep = _props$allowSleep === void 0 ? true : _props$allowSleep,\n        _props$scaleFactor = props.scaleFactor,\n        scaleFactor = _props$scaleFactor === void 0 ? 60 : _props$scaleFactor,\n        _props$enclosed = props.enclosed,\n        enclosed = _props$enclosed === void 0 ? true : _props$enclosed,\n        _props$enclosureThick = props.enclosureThickness,\n        enclosureThickness = _props$enclosureThick === void 0 ? 3 : _props$enclosureThick,\n        children = props.children,\n        _props$style = props.style,\n        style = _props$style === void 0 ? {} : _props$style,\n        rest = _objectWithoutProperties(props, [\"width\", \"height\", \"gravity\", \"allowSleep\", \"scaleFactor\", \"enclosed\", \"enclosureThickness\", \"children\", \"style\"]);\n\n    _this.restProps = rest;\n    _this.SCALE = scaleFactor;\n    _this.world = new b2World(new b2Vec2(gravity[0], gravity[1]), allowSleep);\n    window.world = _this.world;\n\n    if (enclosed) {\n      makeEnclosedBox(width, height, enclosureThickness, _this.world, _this.SCALE);\n    }\n\n    _this.worldChangeStatus = 0;\n\n    _this._contactCbProcess = function (contact, cb) {\n      var SCALE = _this.SCALE;\n      var dataA = contact.GetFixtureA().m_body.GetUserData();\n\n      if (dataA) {\n        dataA[cb] = true;\n      } //could use object pool to reuse this\n\n\n      var eventObj = {\n        SCALE: SCALE,\n        contact: contact\n      };\n\n      if (dataA && dataA.rc && dataA.rc.props[cb]) {\n        eventObj.getOthersCategory = getBodyBCategory;\n        dataA.rc.props[cb](eventObj);\n      }\n\n      var dataB = contact.GetFixtureB().m_body.GetUserData();\n\n      if (dataB) {\n        dataB[cb] = true;\n      }\n\n      if (dataB && dataB.rc && dataB.rc.props[cb]) {\n        eventObj.getOthersCategory = getBodyACategory; //console.log('prop',dataB.rc.props,'cb',cb,'cbe',dataB.rc.props[cb]);\n\n        dataB.rc.props[cb](eventObj);\n      }\n    };\n\n    _this._contactListener = {\n      BeginContact: function BeginContact(contact) {\n        _this._contactCbProcess(contact, 'onBeginContact');\n      },\n      EndContact: function EndContact(contact) {\n        _this._contactCbProcess(contact, 'onEndContact');\n      },\n      PreSolve: function PreSolve(contact, oldManifold) {//console.log('PreSolve',{contact,oldManifold});\n      },\n      PostSolve: function PostSolve(contact, impulse) {//console.log('PostSolve',{contact,impulse});\n      }\n    };\n\n    _this.world.SetContactListener(_this._contactListener); //some styles to make this abomination work\n\n\n    var worldStyle = {\n      width: width,\n      height: height,\n      position: 'relative',\n      overlow: 'hidden',\n      boxSizing: 'border-box',\n      padding: enclosureThickness\n    };\n    _this.worldStyle = _objectSpread({}, worldStyle, style);\n    return _this;\n  }\n\n  _createClass(Box2dWorld, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //start the simulation/render loop\n      this.physLoopStart();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.rafId) {\n        window.cancelAnimationFrame(this.rafId);\n        this.rafId = undefined;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? 'Box2dWorld' : _this$props$className,\n          children = _this$props.children;\n      return React.createElement(\"div\", _extends({\n        className: className\n      }, this.restProps, {\n        style: this.worldStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Provider, {\n        value: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.getChildrenMapped()));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Box2dWorld;\n}(Component);\n\nBox2dWorld.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  gravity: TWO_NUMBERS_OPTIONAL,\n  enclosed: PropTypes.bool,\n  allowSleep: PropTypes.bool,\n  scaleFactor: PropTypes.number,\n  enclosureThickness: PropTypes.number\n};\nexport { Consumer };\nvar _default = Box2dWorld;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Provider, \"Provider\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js\");\n  reactHotLoader.register(Consumer, \"Consumer\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js\");\n  reactHotLoader.register(Box2dWorld, \"Box2dWorld\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js\");\n  leaveModule(module);\n})();\n\n;\nBox2dWorld.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"renderPhysics\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"physLoop\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"physLoopStart\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"getChildrenMapped\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"Box2dWorld\",\n  \"props\": {\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"gravity\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"TWO_NUMBERS_OPTIONAL\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"enclosed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowSleep\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scaleFactor\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"enclosureThickness\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dWorld.js"],"names":["React","Component","PropTypes","b2World","b2Vec2","b2BodyDef","b2FixtureDef","b2Body","b2PolygonShape","b2CircleShape","b2BodyType","fromPhysicsToCanvas","fromCanvasToPhysics","fromCanvasToDom","fromDomToCanvas","setDomPosition","makeEnclosedBox","TWO_NUMBERS_OPTIONAL","getApproxImpactFromContact","getBodyBCategory","getBodyACategory","createContext","Provider","Consumer","Box2dWorld","props","b","world","m_bodyList","m_next","IsAwake","userData","GetUserData","dom","console","log","removed","DestroyBody","GetPosition","x","y","angle","GetAngle","SCALE","rafId","undefined","Step","ClearForces","renderPhysics","physLoopStart","window","requestAnimationFrame","physLoop","Children","map","children","child","type","_internalType","cloneElement","worldRef","width","height","gravity","allowSleep","scaleFactor","enclosed","enclosureThickness","style","rest","restProps","worldChangeStatus","_contactCbProcess","contact","cb","dataA","GetFixtureA","m_body","eventObj","rc","getOthersCategory","dataB","GetFixtureB","_contactListener","BeginContact","EndContact","PreSolve","oldManifold","PostSolve","impulse","SetContactListener","worldStyle","position","overlow","boxSizing","padding","cancelAnimationFrame","className","getChildrenMapped","propTypes","number","isRequired","bool"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {b2World,b2Vec2,b2BodyDef,b2FixtureDef,b2Body,b2PolygonShape,b2CircleShape,b2BodyType} from  \"@flyover/box2d\";\nimport {fromPhysicsToCanvas,fromCanvasToPhysics,fromCanvasToDom,fromDomToCanvas,setDomPosition,makeEnclosedBox,TWO_NUMBERS_OPTIONAL} from './Utils';\nimport {getApproxImpactFromContact,getBodyBCategory,getBodyACategory} from './ContactUtils';\n\n\nconst {Provider,Consumer} = React.createContext();\n\n\n\nclass Box2dWorld extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {width,height,\n\t\t\tgravity=[0,10],\n\t\t\tallowSleep=true,\n\t\t\tscaleFactor=60,\n\t\t\tenclosed=true,\n\t\t\tenclosureThickness=3,\n\t\t\tchildren,\n\t\t\tstyle={},\n\t\t\t...rest} = props;\n\t\tthis.restProps = rest;\n\t\tthis.SCALE = scaleFactor;\n\n\t\tthis.world = new b2World(new b2Vec2(gravity[0], gravity[1]),allowSleep);\n\t\twindow.world = this.world;\n\t\tif(enclosed){\n\t\t\tmakeEnclosedBox(width,height,enclosureThickness,this.world,this.SCALE);\n\t\t}\n\n\t\tthis.worldChangeStatus  = 0;\n\n\n\t\tthis._contactCbProcess  = (contact,cb)=> {\n\t\t\t\tlet SCALE = this.SCALE;\n\t\t\t\tconst dataA = contact.GetFixtureA().m_body.GetUserData();\n\t\t\t\tif(dataA){\n\t\t\t\t\tdataA[cb] = true;\n\t\t\t\t}\n\t\t\t\t//could use object pool to reuse this\n\t\t\t\tconst eventObj = {\n\t\t\t\t\t\tSCALE,\n\t\t\t\t\t\tcontact,\n\t\t\t\t\t};\n\t\t\t\tif(dataA && dataA.rc && dataA.rc.props[cb]){\n\t\t\t\t\teventObj.getOthersCategory = getBodyBCategory;\n\t\t\t\t\tdataA.rc.props[cb](eventObj);\n\t\t\t\t}\n\t\t\t\tconst dataB = contact.GetFixtureB().m_body.GetUserData();\n\t\t\t\tif (dataB){\n\t\t\t\t\tdataB[cb] = true;\n\t\t\t\t}\n\t\t\t\tif(dataB && dataB.rc && dataB.rc.props[cb]){\n\t\t\t\t\teventObj.getOthersCategory = getBodyACategory;\n\t\t\t\t\t//console.log('prop',dataB.rc.props,'cb',cb,'cbe',dataB.rc.props[cb]);\n\t\t\t\t\tdataB.rc.props[cb](eventObj);\n\t\t\t\t}\n\t\t}\n\n\t\tthis._contactListener = {\n\t\t\tBeginContact:(contact)=>{\n\t\t\t\tthis._contactCbProcess(contact,'onBeginContact');\n\t\t\t},\n\t\t\tEndContact: (contact) => {\n\t\t\t\tthis._contactCbProcess(contact,'onEndContact');\n\t\t\t},\n\t\t\tPreSolve:(contact,oldManifold)=>{\n\t\t\t\t//console.log('PreSolve',{contact,oldManifold});\n\t\t\t},\n\t\t\tPostSolve:(contact,impulse) => {\n\t\t\t\t//console.log('PostSolve',{contact,impulse});\n\t\t\t}\n\t\t};\n\n\t\tthis.world.SetContactListener(this._contactListener);\n\n\t\t//some styles to make this abomination work\n\t\tlet worldStyle = {\n\t\t\twidth,height,\n\t\t\tposition:'relative',\n\t\t\toverlow:'hidden',\n\t\t\tboxSizing:'border-box',\n\t\t\tpadding:enclosureThickness,\n\t\t};\n\t\tthis.worldStyle = {...worldStyle,...style};\n\t}\n\n\trenderPhysics = () => {\n\t\t//box2d libs typically implement linkedlist for fast looping\n\t\tfor (let b = this.world.m_bodyList; b; b = b.m_next) {\n\t\t\t// if(this.worldChangeStatus>0){\n\t\t\t// \tb.SetAwake(true);\n\t\t\t// \tthis.worldChangeStatus = 1;\n\t\t\t// }\n\t\t\tif(!b.IsAwake()){\n\t\t\t\t//if the body is sleeping , why bother\n\t\t\t\tcontinue;\n\t\t\t\t//I probably could optimize static bodies render only once. But not now\n\t\t\t}\n\n\t    \tlet userData=b.GetUserData();\n\t    \t\n\t    \tif(userData && userData.dom){\n\t    \t\tconsole.log('userData',userData);\n\t    \t\tif(userData.removed){\n\t    \t\t\t//this is the most convenient place to do this. I should probably rename the method \n\t    \t\t\t//console.log('body removing',b);\n\t    \t\t\tthis.world.DestroyBody(b);\n\t    \t\t\t//this.worldChangeStatus=2;\n\t    \t\t} else {\n\t    \t\t\tlet {x,y} = b.GetPosition();\n\t    \t\t\tlet angle = b.GetAngle();\n\t    \t\t\t//sidestepping whole React and applying css transforms directly to the dom nodes directly (seems simpler this way , hopefully more performant)\n\t    \t\t\t//(dom,x,y,rotation,SCALE)\n\t    \t\t\tsetDomPosition(userData.dom,x,y,angle,this.SCALE);\n\t    \t\t}\n\t    \t}\n\n\t\t}\n\t\t// if(this.worldChangeStatus===1){\n\t\t// \tthis.worldChangeStatus=0;\n\t\t// }\n\n\t};\n\n\tphysLoop = ()=>{\n\t\tthis.rafId = undefined;\n\t\tthis.world.Step(\n\t\t         1 / 60   //frame-rate (just hoping typical 60hz. in future, planning to use webworkers for uninterrupted physics simulation)\n\t\t      ,  10       //velocity iterations\n\t\t      ,  10       //position iterations\n\t\t);\n\t   \tthis.world.ClearForces();\n\t   \tthis.renderPhysics();\n\t\tthis.physLoopStart();\n\t\t//console.log('physLoop running');\n\t};\n\n\tphysLoopStart = () => {\n\t\tif (!this.rafId) {\n\t       this.rafId = window.requestAnimationFrame(this.physLoop);\n\t    }\n\t};\n\n\tcomponentDidMount() {\n\t\t//start the simulation/render loop\n\t\tthis.physLoopStart();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.rafId) {\n\t       window.cancelAnimationFrame(this.rafId);\n\t       this.rafId = undefined;\n\t    }\n\t}\n\n\tgetChildrenMapped = () => {\n\t\treturn React.Children.map(this.props.children,(child)=>{\n\t\t\tif(child.type._internalType==='Box2dObject'){\n\t\t\t\treturn React.cloneElement(child,{worldRef:this});\n\t\t\t} else {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tlet {className='Box2dWorld',children} = this.props;\n\t\t\n\t\treturn (\n\n\t\t\t<div className={className} {...this.restProps} style={this.worldStyle}>\n\t\t\t\t<Provider value={this}>\n\t\t\t\t\t{this.getChildrenMapped()}\n\t\t\t\t</Provider>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n}\n\n\n\nBox2dWorld.propTypes = {\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tgravity: TWO_NUMBERS_OPTIONAL,\n\tenclosed: PropTypes.bool,\n\tallowSleep: PropTypes.bool,\n\tscaleFactor: PropTypes.number,\n\tenclosureThickness: PropTypes.number\n};\n\nexport {Consumer};\n\nexport default Box2dWorld;"]}]}