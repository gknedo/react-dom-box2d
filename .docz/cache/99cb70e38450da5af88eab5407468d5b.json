{"remainingRequest":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-react-jsx\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js","dependencies":[{"path":"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js","mtime":1546141995828},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n//I hate writing utils file. Typically that means don't know how to group your utilities\n//for now this will have to do\nimport { b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2BodyType } from \"@flyover/box2d\"; //some utilities to deal with co-ordinate systems variations with some sanity intact\n//seems simple enough. But without these , I get very easily confused\n//Box2d typically deals with meters(realworld) and not pixels(our canvas on screen) \n\nvar fromPhysicsToCanvas = function fromPhysicsToCanvas(n, SCALE) {\n  return n * SCALE;\n};\n\nvar fromCanvasToPhysics = function fromCanvasToPhysics(n, SCALE) {\n  return n / SCALE;\n}; //Dom co-ordinate and position system is slightly different from canvas positioning\n\n\nvar fromCanvasToDom = function fromCanvasToDom(x, y, width, height) {\n  var left = x - width / 2,\n      top = y - height / 2;\n  return {\n    left: left,\n    top: top\n  };\n};\n\nvar fromDomToCanvas = function fromDomToCanvas(left, top, width, height) {\n  var x = left + width / 2,\n      y = top + height / 2;\n  return {\n    x: x,\n    y: y\n  };\n}; //trying my best to support every browser I can with vendor prefixes\n\n\nvar setVendorPrefixedTransform = function setVendorPrefixedTransform(element, value) {\n  element.style[\"webkitTransform\"] = value;\n  element.style[\"mozTransform\"] = value;\n  element.style[\"msTransform\"] = value;\n  element.style[\"oTransform\"] = value;\n  element.style.transform = value;\n};\n\nvar setDomPosition = function setDomPosition(dom, x, y, rotation, SCALE) {\n  //console.log('got SCALE',SCALE,{x,y,rotation});\n  var _fromCanvasToDom = fromCanvasToDom(fromPhysicsToCanvas(x, SCALE), fromPhysicsToCanvas(y, SCALE), dom.offsetWidth, dom.offsetHeight),\n      left = _fromCanvasToDom.left,\n      top = _fromCanvasToDom.top; //console.log('converted',{left,top,ow:dom.offsetWidth,oh:dom.offsetHeight});\n\n\n  var transformString = \"translate(\".concat(left, \"px,\").concat(top, \"px) rotate(\").concat(rotation, \"rad)\"); //dom.style.transform = transformString;\n  //console.log('dom transforming');\n\n  setVendorPrefixedTransform(dom, transformString);\n}; //without this , beginners (and almost everybody) will go mad\n//this creates a box fence of static bodies to prevent the objects falling out of the visible area and continuing to fall infinitely like Alice in rabbit hole\n\n\nvar makeEnclosedBox = function makeEnclosedBox(width, height, thickness, world, SCALE) {\n  var bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_staticBody;\n  var fixDef = new b2FixtureDef();\n  fixDef.shape = new b2PolygonShape(); // half width, half height.\n\n  fixDef.density = 1.0;\n  fixDef.friction = 0.5;\n  fixDef.restitution = 0; //left \n\n  fixDef.shape.SetAsBox(fromCanvasToPhysics(thickness / 2, SCALE), fromCanvasToPhysics(height / 2, SCALE));\n  bodyDef.position.x = fromCanvasToPhysics(thickness / 2, SCALE);\n  bodyDef.position.y = fromCanvasToPhysics(height / 2, SCALE);\n  var fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n  fixt.m_body.SetUserData({\n    category: '_LEFT_WALL_'\n  }); //bottom\n  //half width,half height\n\n  fixDef.shape.SetAsBox(fromCanvasToPhysics(width / 2, SCALE), fromCanvasToPhysics(thickness / 2, SCALE));\n  bodyDef.position.x = fromCanvasToPhysics(width / 2, SCALE);\n  bodyDef.position.y = fromCanvasToPhysics(height, SCALE);\n  fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n  fixt.m_body.SetUserData({\n    category: '_BOTTOM_WALL_'\n  }); //top\n\n  fixDef.shape.SetAsBox(fromCanvasToPhysics(width / 2, SCALE), fromCanvasToPhysics(thickness / 2, SCALE));\n  bodyDef.position.x = fromCanvasToPhysics(width / 2, SCALE);\n  bodyDef.position.y = fromCanvasToPhysics(thickness / 2, SCALE);\n  fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n  fixt.m_body.SetUserData({\n    category: '_TOP_WALL_'\n  }); //right\n\n  fixDef.shape.SetAsBox(fromCanvasToPhysics(thickness / 2, SCALE), fromCanvasToPhysics(height / 2, SCALE));\n  bodyDef.position.x = fromCanvasToPhysics(width, SCALE);\n  bodyDef.position.y = fromCanvasToPhysics(height / 2, SCALE);\n  fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n  fixt.m_body.SetUserData({\n    category: '_RIGHT_WALL_'\n  });\n};\n\nvar delay = function delay(millis) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      return resolve();\n    }, millis);\n  });\n};\n\nvar TWO_NUMBERS = function TWO_NUMBERS(props, propName, componentName) {\n  if (!Array.isArray(props[propName]) || props[propName].length != 2 || !props[propName].every(Number.isFinite)) {\n    return new Error(\"\".concat(propName, \" needs to be an array of two numbers\"));\n  }\n\n  return null;\n};\n\nvar TWO_NUMBERS_OPTIONAL = function TWO_NUMBERS_OPTIONAL(props, propName, componentName) {\n  if (!props.TWO_NUMBERS_OPTIONAL) {\n    return null;\n  }\n\n  if (!Array.isArray(props[propName]) || props[propName].length != 2 || !props[propName].every(Number.isFinite)) {\n    return new Error(\"\".concat(propName, \" needs to be an array of two numbers\"));\n  }\n\n  return null;\n};\n\nexport { fromPhysicsToCanvas, fromCanvasToPhysics, fromCanvasToDom, fromDomToCanvas, setDomPosition, makeEnclosedBox, delay, TWO_NUMBERS, TWO_NUMBERS_OPTIONAL };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(fromPhysicsToCanvas, \"fromPhysicsToCanvas\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(fromCanvasToPhysics, \"fromCanvasToPhysics\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(fromCanvasToDom, \"fromCanvasToDom\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(fromDomToCanvas, \"fromDomToCanvas\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(setVendorPrefixedTransform, \"setVendorPrefixedTransform\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(setDomPosition, \"setDomPosition\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(makeEnclosedBox, \"makeEnclosedBox\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(delay, \"delay\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(TWO_NUMBERS, \"TWO_NUMBERS\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  reactHotLoader.register(TWO_NUMBERS_OPTIONAL, \"TWO_NUMBERS_OPTIONAL\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/home/nagarajan/portable/projects/react-dom-box2d/src/Utils.js"],"names":["b2BodyDef","b2FixtureDef","b2Body","b2PolygonShape","b2BodyType","fromPhysicsToCanvas","n","SCALE","fromCanvasToPhysics","fromCanvasToDom","x","y","width","height","left","top","fromDomToCanvas","setVendorPrefixedTransform","element","value","style","transform","setDomPosition","dom","rotation","offsetWidth","offsetHeight","transformString","makeEnclosedBox","thickness","world","bodyDef","type","b2_staticBody","fixDef","shape","density","friction","restitution","SetAsBox","position","fixt","CreateBody","CreateFixture","m_body","SetUserData","category","delay","millis","Promise","resolve","reject","setTimeout","TWO_NUMBERS","props","propName","componentName","Array","isArray","length","every","Number","isFinite","Error","TWO_NUMBERS_OPTIONAL"],"mappings":"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","sourcesContent":["//I hate writing utils file. Typically that means don't know how to group your utilities\n//for now this will have to do\nimport {b2BodyDef,b2FixtureDef,b2Body,b2PolygonShape,b2BodyType} from  \"@flyover/box2d\";\n\n//some utilities to deal with co-ordinate systems variations with some sanity intact\n//seems simple enough. But without these , I get very easily confused\n\n//Box2d typically deals with meters(realworld) and not pixels(our canvas on screen) \nconst fromPhysicsToCanvas = (n,SCALE) => n*SCALE;\nconst fromCanvasToPhysics = (n,SCALE) => n/SCALE; \n\n//Dom co-ordinate and position system is slightly different from canvas positioning\nconst fromCanvasToDom =(x,y,width,height) => {\n\tlet left = x-(width/2),\n\t\ttop = y - (height/2);\n\treturn {left,top};\n};\nconst fromDomToCanvas = (left,top,width,height) =>{\n\tlet x = left+(width/2),\n\t\ty = top+(height/2);\n\treturn {x,y};\n};\n\n\n//trying my best to support every browser I can with vendor prefixes\nconst setVendorPrefixedTransform = (element, value)=> {\n  element.style[\"webkitTransform\"] = value;\n  element.style[\"mozTransform\"] = value;\n  element.style[\"msTransform\"] = value;\n  element.style[\"oTransform\"] = value;\n  element.style.transform = value;\n}\n\nconst setDomPosition = (dom,x,y,rotation,SCALE) => {\n\t//console.log('got SCALE',SCALE,{x,y,rotation});\n\tlet {left,top }= fromCanvasToDom(fromPhysicsToCanvas(x,SCALE),fromPhysicsToCanvas(y,SCALE),dom.offsetWidth,dom.offsetHeight);\n\t//console.log('converted',{left,top,ow:dom.offsetWidth,oh:dom.offsetHeight});\n\tlet transformString = `translate(${left}px,${top}px) rotate(${rotation}rad)`;\n\t//dom.style.transform = transformString;\n\t//console.log('dom transforming');\n\tsetVendorPrefixedTransform(dom,transformString);\n};\n\n//without this , beginners (and almost everybody) will go mad\n//this creates a box fence of static bodies to prevent the objects falling out of the visible area and continuing to fall infinitely like Alice in rabbit hole\nconst makeEnclosedBox = (width,height,thickness,world,SCALE) => {\n\tvar bodyDef = new b2BodyDef;\n\tbodyDef.type = b2BodyType.b2_staticBody;\n\tvar fixDef = new b2FixtureDef;\n\tfixDef.shape = new b2PolygonShape;\n\t// half width, half height.\n\tfixDef.density = 1.0;\n\tfixDef.friction = 0.5;\n\tfixDef.restitution = 0;\n\n\t//left \n\tfixDef.shape.SetAsBox(fromCanvasToPhysics(thickness/2,SCALE),fromCanvasToPhysics(height/2,SCALE))\n\tbodyDef.position.x = fromCanvasToPhysics(thickness/2,SCALE);\n\tbodyDef.position.y = fromCanvasToPhysics(height/2,SCALE);\n\tlet fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n\tfixt.m_body.SetUserData({category:'_LEFT_WALL_'});\n\t//bottom\n\t//half width,half height\n\tfixDef.shape.SetAsBox(fromCanvasToPhysics(width/2,SCALE),fromCanvasToPhysics(thickness/2,SCALE));\n\tbodyDef.position.x = fromCanvasToPhysics(width/2,SCALE);\n\tbodyDef.position.y = fromCanvasToPhysics(height,SCALE);\n\tfixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n\tfixt.m_body.SetUserData({category:'_BOTTOM_WALL_'});\n\n\t//top\n\tfixDef.shape.SetAsBox(fromCanvasToPhysics(width/2,SCALE),fromCanvasToPhysics(thickness/2,SCALE));\n\tbodyDef.position.x = fromCanvasToPhysics(width/2,SCALE);\n\tbodyDef.position.y = fromCanvasToPhysics(thickness/2,SCALE);\n\tfixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n\tfixt.m_body.SetUserData({category:'_TOP_WALL_'});\n\n\t//right\n\tfixDef.shape.SetAsBox(fromCanvasToPhysics(thickness/2,SCALE),fromCanvasToPhysics(height/2,SCALE));\n\tbodyDef.position.x = fromCanvasToPhysics(width,SCALE);\n\tbodyDef.position.y = fromCanvasToPhysics(height/2,SCALE);\n\tfixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n\tfixt.m_body.SetUserData({category:'_RIGHT_WALL_'});\n\n}\n\nconst delay = (millis)=> new Promise((resolve,reject)=>{\n\tsetTimeout(()=>resolve(),millis);\n});\n\nconst TWO_NUMBERS = function(props, propName, componentName) {\n  if (!Array.isArray(props[propName]) || props[propName].length != 2 || !props[propName].every(Number.isFinite)) {\n    return new Error(`${propName} needs to be an array of two numbers`);\n  }\n\n  return null\n}\n\n\n\n\nconst TWO_NUMBERS_OPTIONAL = function(props, propName, componentName) {\n  if(!props.TWO_NUMBERS_OPTIONAL){\n  \treturn null;\n  }\n   if (!Array.isArray(props[propName]) || props[propName].length != 2 || !props[propName].every(Number.isFinite)) {\n    return new Error(`${propName} needs to be an array of two numbers`);\n  }\n\n  return null\n}\n\nexport {fromPhysicsToCanvas,fromCanvasToPhysics,fromCanvasToDom,fromDomToCanvas,setDomPosition,makeEnclosedBox,delay,TWO_NUMBERS,TWO_NUMBERS_OPTIONAL};"]}]}