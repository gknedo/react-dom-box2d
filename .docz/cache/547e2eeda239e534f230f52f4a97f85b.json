{"remainingRequest":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-react-jsx\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dObject.js","dependencies":[{"path":"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dObject.js","mtime":1546171229552},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { b2Vec2, b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2CircleShape, b2BodyType } from \"@flyover/box2d\";\nimport { fromPhysicsToCanvas, fromCanvasToPhysics, fromCanvasToDom, fromDomToCanvas, setDomPosition, makeEnclosedBox, delay, TWO_NUMBERS_OPTIONAL } from './Utils';\n\nvar Box2dObject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Box2dObject, _Component);\n\n  function Box2dObject(props) {\n    var _this;\n\n    _classCallCheck(this, Box2dObject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Box2dObject).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createFixturesForInline\", function (fixDef, body, rects) {\n      //const rects = this.el.getClientRects();\n      var boundingRect = _this.el.getBoundingClientRect();\n\n      var centerX = _this.el.offsetWidth / 2;\n      var centerY = boundingRect.height / 2;\n      var SCALE = _this.props.worldRef.SCALE; //if for some reason a fixture of size 0 created whole simulation screws up and not working \n\n      var filteredRects = Array.from(rects).filter(function (x) {\n        return x.width > 0 && x.height > 0;\n      });\n      var leftOffset = boundingRect.left;\n      var topOffset = boundingRect.top;\n      var firstRect = filteredRects[0];\n\n      for (var i = 0; i < filteredRects.length; i++) {\n        var curRect = filteredRects[i];\n        var fixtureX = (curRect.left - leftOffset + (curRect.right - leftOffset)) / 2 - centerX;\n        var fixtureY = curRect.top - firstRect.top + curRect.height / 2 - centerY;\n        fixDef.shape = new b2PolygonShape();\n        fixDef.shape.SetAsBox(fromCanvasToPhysics(curRect.width / 2, SCALE), fromCanvasToPhysics(curRect.height / 2, SCALE), new b2Vec2(fromCanvasToPhysics(fixtureX, SCALE), fromCanvasToPhysics(fixtureY, SCALE)));\n        var fixt = body.CreateFixture(fixDef);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"physicsInit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, _this$props$fixed, fixed, _this$props$restituti, restitution, _this$props$friction, friction, _this$props$density, density, _this$props$shape, shape, _this$props$category, category, worldRef, data, width, height, left, top, initialForce, initialImpulse, bullet, bodyDef, fixDef, SCALE, domWidth, domHeight, domLeft, domTop, _fromDomToCanvas, x, y, body, rects, userData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, _this$props$fixed = _this$props.fixed, fixed = _this$props$fixed === void 0 ? false : _this$props$fixed, _this$props$restituti = _this$props.restitution, restitution = _this$props$restituti === void 0 ? 0.1 : _this$props$restituti, _this$props$friction = _this$props.friction, friction = _this$props$friction === void 0 ? 0.5 : _this$props$friction, _this$props$density = _this$props.density, density = _this$props$density === void 0 ? 1 : _this$props$density, _this$props$shape = _this$props.shape, shape = _this$props$shape === void 0 ? 'box' : _this$props$shape, _this$props$category = _this$props.category, category = _this$props$category === void 0 ? null : _this$props$category, worldRef = _this$props.worldRef, data = _this$props.data, width = _this$props.width, height = _this$props.height, left = _this$props.left, top = _this$props.top, initialForce = _this$props.initialForce, initialImpulse = _this$props.initialImpulse, bullet = _this$props.bullet;\n              bodyDef = new b2BodyDef();\n              bodyDef.type = fixed ? b2BodyType.b2_staticBody : b2BodyType.b2_dynamicBody;\n              fixDef = new b2FixtureDef();\n              fixDef.shape = new b2PolygonShape();\n              fixDef.density = density;\n              fixDef.friction = friction;\n              fixDef.restitution = restitution;\n              SCALE = worldRef.SCALE; //had to be done to get browser realize width/height in position:relative\n              //this.el.style.overflow='auto';\n              //FIXME: Check browser compatibility of these methods.(I don't want to use jquery 😠 ). \n\n              domWidth = width ? width : _this.el.offsetWidth, domHeight = height ? height : _this.el.offsetHeight, domLeft = 'left' in _this.props ? left : _this.el.offsetLeft, domTop = 'top' in _this.props ? top : _this.el.offsetTop; // (left,top,width,height) \n\n              _fromDomToCanvas = fromDomToCanvas(domLeft, domTop, domWidth, domHeight), x = _fromDomToCanvas.x, y = _fromDomToCanvas.y;\n              bodyDef.position.x = fromCanvasToPhysics(x, worldRef.SCALE);\n              bodyDef.position.y = fromCanvasToPhysics(y, worldRef.SCALE);\n              body = worldRef.world.CreateBody(bodyDef);\n\n              if (!(shape === 'box')) {\n                _context.next = 20;\n                break;\n              }\n\n              rects = _this.el.getClientRects();\n              console.log('rects', rects);\n\n              if (rects.length > 1) {\n                console.log('inline element detected', rects); //this is an inline element\n\n                _this.createFixturesForInline(fixDef, body, rects);\n              } else {\n                fixDef.shape = new b2PolygonShape(); //half width,half height\n\n                fixDef.shape.SetAsBox(fromCanvasToPhysics(domWidth / 2, SCALE), fromCanvasToPhysics(domHeight / 2, SCALE));\n                body.CreateFixture(fixDef);\n              }\n\n              _context.next = 29;\n              break;\n\n            case 20:\n              if (!(shape === 'circle')) {\n                _context.next = 28;\n                break;\n              }\n\n              if (!(domHeight != domWidth)) {\n                _context.next = 23;\n                break;\n              }\n\n              throw new Error('For shape circle, height and width should be same');\n\n            case 23:\n              fixDef.shape = new b2CircleShape(fromCanvasToPhysics(domHeight / 2, SCALE));\n              body.CreateFixture(fixDef);\n\n              _this.setState({\n                circleRadius: domHeight / 2\n              });\n\n              _context.next = 29;\n              break;\n\n            case 28:\n              throw new Error(\"Unknown shape \".concat(shape, \", only box and circle supported for now\"));\n\n            case 29:\n              userData = {\n                category: category,\n                dom: _this.el,\n                rc: _assertThisInitialized(_assertThisInitialized(_this))\n              };\n\n              if (data) {\n                userData.data = data;\n              } //console.log('setting userData',userData);\n\n\n              body.SetUserData(userData);\n              _this.body = body;\n\n              if (bullet) {\n                _this.body.SetBullet(bullet);\n              }\n\n              if (initialForce) {\n                _this.applyForce(initialForce);\n              }\n\n              if (initialImpulse) {\n                _this.applyImpulse(initialImpulse);\n              }\n\n              _this.setState({\n                domHeight: domHeight,\n                domWidth: domWidth,\n                physicsInited: true\n              });\n\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"applyForce\", function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          x = _ref3[0],\n          y = _ref3[1];\n\n      if (!_this.body) {\n        return;\n      }\n\n      _this.body.ApplyForce(new b2Vec2(x, y), _this.body.GetWorldCenter());\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"applyImpulse\", function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          x = _ref5[0],\n          y = _ref5[1];\n\n      if (!_this.body) {\n        return;\n      }\n\n      _this.body.ApplyLinearImpulse(new b2Vec2(x, y), _this.body.GetWorldCenter());\n    });\n\n    _this.state = {\n      physicsInited: false,\n      domWidth: null,\n      domHeight: null,\n      circleRadius: null\n    };\n\n    if (!props.worldRef) {\n      throw new Error('worldRef prop is missing. Please use world consumer to acquire the worldRef or put the Item component direct child of the World');\n    }\n\n    return _this;\n  }\n\n  _createClass(Box2dObject, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      //console.log('component unmounting',this.body);\n      if (this.body) {\n        var userData = this.body.GetUserData();\n        userData.removed = true;\n        this.body.SetUserData(userData);\n        this.body.SetAwake(true);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if ('waitFor' in this.props) {\n        if (this.props.waitFor) {\n          this.physicsInit();\n        }\n      } else {\n        this.physicsInit();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!('waitFor' in this.props)) {\n        return;\n      }\n\n      if (this.state.physicsInited) {\n        return;\n      }\n\n      if (this.props.waitFor) {\n        this.physicsInit();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          physicsInited = _this$state.physicsInited,\n          domHeight = _this$state.domHeight,\n          domWidth = _this$state.domWidth,\n          circleRadius = _this$state.circleRadius;\n      var _this$props$hideUntil = this.props.hideUntil,\n          hideUntil = _this$props$hideUntil === void 0 ? true : _this$props$hideUntil;\n      var _this$props$children$ = this.props.children.props.style,\n          style = _this$props$children$ === void 0 ? {} : _this$props$children$;\n      var styles = physicsInited ? {\n        position: 'absolute',\n        display: 'block',\n        left: 0,\n        top: 0,\n        height: domHeight,\n        width: domWidth,\n        willChange: 'transform'\n      } : hideUntil ? {\n        visibility: 'hidden'\n      } : {};\n\n      if (physicsInited && circleRadius) {\n        styles.borderRadius = circleRadius;\n      }\n\n      return React.cloneElement(this.props.children, {\n        ref: function ref(el) {\n          _this2.el = el;\n        },\n        style: _objectSpread({}, style, styles)\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Box2dObject;\n}(Component);\n\n_defineProperty(Box2dObject, \"_internalType\", \"Box2dObject\");\n\nBox2dObject.propTypes = {\n  children: PropTypes.element.isRequired,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  left: PropTypes.number,\n  top: PropTypes.number,\n  density: PropTypes.number,\n  friction: PropTypes.number,\n  restitution: PropTypes.number,\n  bullet: PropTypes.bool,\n  onBeginContact: PropTypes.func,\n  onEndContact: PropTypes.func,\n  shape: PropTypes.oneOf(['circle', 'box']),\n  initialForce: TWO_NUMBERS_OPTIONAL,\n  initialImpulse: TWO_NUMBERS_OPTIONAL,\n  category: PropTypes.string\n};\nvar _default = Box2dObject;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Box2dObject, \"Box2dObject\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dObject.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dObject.js\");\n  leaveModule(module);\n})();\n\n;\nBox2dObject.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"createFixturesForInline\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"fixDef\",\n      \"type\": null\n    }, {\n      \"name\": \"body\",\n      \"type\": null\n    }, {\n      \"name\": \"rects\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"physicsInit\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"applyForce\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"[x,y]\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"applyImpulse\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"[x,y]\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Box2dObject\",\n  \"props\": {\n    \"children\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"left\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"top\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"density\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"friction\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"restitution\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"bullet\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onBeginContact\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onEndContact\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"shape\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'circle'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'box'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"initialForce\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"TWO_NUMBERS_OPTIONAL\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"initialImpulse\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"TWO_NUMBERS_OPTIONAL\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"category\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/home/nagarajan/portable/projects/react-dom-box2d/src/Box2dObject.js"],"names":["React","Component","Fragment","PropTypes","b2Vec2","b2BodyDef","b2FixtureDef","b2Body","b2PolygonShape","b2CircleShape","b2BodyType","fromPhysicsToCanvas","fromCanvasToPhysics","fromCanvasToDom","fromDomToCanvas","setDomPosition","makeEnclosedBox","delay","TWO_NUMBERS_OPTIONAL","Box2dObject","props","fixDef","body","rects","boundingRect","el","getBoundingClientRect","centerX","offsetWidth","centerY","height","SCALE","worldRef","filteredRects","Array","from","filter","x","width","leftOffset","left","topOffset","top","firstRect","i","length","curRect","fixtureX","right","fixtureY","shape","SetAsBox","fixt","CreateFixture","fixed","restitution","friction","density","category","data","initialForce","initialImpulse","bullet","bodyDef","type","b2_staticBody","b2_dynamicBody","domWidth","domHeight","offsetHeight","domLeft","offsetLeft","domTop","offsetTop","y","position","world","CreateBody","getClientRects","console","log","createFixturesForInline","Error","setState","circleRadius","userData","dom","rc","SetUserData","SetBullet","applyForce","applyImpulse","physicsInited","ApplyForce","GetWorldCenter","ApplyLinearImpulse","state","GetUserData","removed","SetAwake","waitFor","physicsInit","prevProps","prevState","hideUntil","children","style","styles","display","willChange","visibility","borderRadius","cloneElement","ref","propTypes","element","isRequired","number","bool","onBeginContact","func","onEndContact","oneOf","string"],"mappings":"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","sourcesContent":["import React,{Component,Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {b2Vec2,b2BodyDef,b2FixtureDef,b2Body,b2PolygonShape,b2CircleShape,b2BodyType} from  \"@flyover/box2d\";\nimport {fromPhysicsToCanvas,fromCanvasToPhysics,fromCanvasToDom,fromDomToCanvas,setDomPosition,makeEnclosedBox,delay,TWO_NUMBERS_OPTIONAL} from './Utils';\n\n\nclass Box2dObject extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {physicsInited:false,domWidth:null,domHeight:null,circleRadius:null};\n\t\tif(!props.worldRef){\n\t\t\tthrow new Error('worldRef prop is missing. Please use world consumer to acquire the worldRef or put the Item component direct child of the World');\n\t\t}\n\t}\n\tstatic _internalType=\"Box2dObject\";\n\t\n\t//I am not sure in which browsers this works\n\tcreateFixturesForInline = (fixDef,body,rects) => {\n\t\t//const rects = this.el.getClientRects();\n\t\tconst boundingRect = this.el.getBoundingClientRect();\n\t\t\n\t\tconst centerX = this.el.offsetWidth/2;\n\t\tconst centerY = boundingRect.height/2;\n\t\tconst SCALE = this.props.worldRef.SCALE;\n\t\t//if for some reason a fixture of size 0 created whole simulation screws up and not working \n\t\tconst filteredRects = Array.from(rects).filter(x => ((x.width>0)&&(x.height>0)));\n\t\tconst leftOffset = boundingRect.left;\n\t\tconst topOffset = boundingRect.top;\n\t\tconst firstRect = filteredRects[0];\n\t\tfor (let i = 0; i < filteredRects.length; i++) {\n\t\t\tlet curRect = filteredRects[i];\n\t\t\tlet fixtureX = (((curRect.left-leftOffset)+(curRect.right-leftOffset))/2)-centerX;\n\t\t\tlet fixtureY = ((curRect.top - firstRect.top)+(curRect.height/2))-centerY;\n\t\t\tfixDef.shape = new b2PolygonShape;\n\t\t\t\n\t\t\tfixDef.shape.SetAsBox(fromCanvasToPhysics(curRect.width/2,SCALE),fromCanvasToPhysics(curRect.height/2,SCALE),new b2Vec2(fromCanvasToPhysics(fixtureX,SCALE),fromCanvasToPhysics(fixtureY,SCALE)));\n\t\t\tlet fixt = body.CreateFixture(fixDef);\n\t\t}\n\t}\n\n\t//FIXME: this method is getting big\n\tphysicsInit = async () => {\n\t\tconst {fixed=false,restitution=0.1,friction=0.5,density=1,shape='box',category=null,worldRef,data,width,height,left,top,initialForce,initialImpulse,bullet}=this.props;\n\n\t\tconst bodyDef = new b2BodyDef;\n\t\tbodyDef.type = (fixed)? b2BodyType.b2_staticBody:b2BodyType.b2_dynamicBody;\n\t\t\n\t\tconst fixDef = new b2FixtureDef;\n\t\tfixDef.shape = new b2PolygonShape;\n\t\tfixDef.density = density;\n\t\tfixDef.friction = friction;\n\t\tfixDef.restitution = restitution;\n\t\tlet SCALE = worldRef.SCALE;\n\t\t\n\t\t\n\t\t//had to be done to get browser realize width/height in position:relative\n\t\t//this.el.style.overflow='auto';\n\t\t//FIXME: Check browser compatibility of these methods.(I don't want to use jquery 😠 ). \n\t\tlet domWidth = (width)?width: this.el.offsetWidth,\n\t\t\tdomHeight =(height)?height: this.el.offsetHeight,\n\t\t\tdomLeft = ('left' in this.props)?left: this.el.offsetLeft,\n\t\t\tdomTop = ('top' in this.props )?top:this.el.offsetTop;\n\t\t\n\t\n\t\t\t\t\t// (left,top,width,height) \n\t\tlet {x,y} = fromDomToCanvas(domLeft,domTop,domWidth,domHeight);\n\t\t\n\t\tbodyDef.position.x = fromCanvasToPhysics(x,worldRef.SCALE);\n\t\tbodyDef.position.y = fromCanvasToPhysics(y,worldRef.SCALE);\n\t\t\n\t\tconst body  = worldRef.world.CreateBody(bodyDef);\n\t\t\n\t\tif(shape==='box'){\n\t\t\tconst rects = this.el.getClientRects();\n\t\t\tconsole.log('rects',rects);\n\t\t\tif(rects.length>1){\n\t\t\t\tconsole.log('inline element detected',rects);\n\t\t\t\t//this is an inline element\n\t\t\t\tthis.createFixturesForInline(fixDef,body,rects);\n\t\t\t} else {\n\t\t\t\tfixDef.shape = new b2PolygonShape;\n\t\t\t\t//half width,half height\n\t\t\t\tfixDef.shape.SetAsBox(fromCanvasToPhysics(domWidth/2,SCALE),fromCanvasToPhysics(domHeight/2,SCALE));\n\t\t\t\tbody.CreateFixture(fixDef);\n\t\t\t}\n\t\t} else if(shape==='circle'){\n\t\t\tif (domHeight != domWidth){\n\t\t\t\tthrow new Error('For shape circle, height and width should be same');\n\t\t\t}\n\t\t\tfixDef.shape = new b2CircleShape(fromCanvasToPhysics(domHeight/2,SCALE));\n\t\t\tbody.CreateFixture(fixDef);\n\t\t\tthis.setState({circleRadius:domHeight/2});\n\n\t\t} else {\n\t\t\tthrow new Error(`Unknown shape ${shape}, only box and circle supported for now`);\n\t\t}\n\t\t\n\t\tconst userData = {category,dom:this.el,rc:this};\n\t\tif(data){\n\t\t\tuserData.data = data;\n\t\t}\n\t\t//console.log('setting userData',userData);\n\t\tbody.SetUserData(userData);\n\t\tthis.body = body;\n\t\tif(bullet){\n\t\t\tthis.body.SetBullet(bullet);\n\t\t}\n\t\t\n\t\tif(initialForce){\n\t\t\tthis.applyForce(initialForce);\n\t\t}\n\t\tif(initialImpulse){\n\t\t\tthis.applyImpulse(initialImpulse);\n\t\t}\n\t\tthis.setState({domHeight,domWidth,physicsInited:true});\n\t};\n\n\tapplyForce = ([x,y]) => {\n\t\tif(!this.body){\n\t\t\treturn;\n\t\t}\n\t\tthis.body.ApplyForce(new b2Vec2(x,y),this.body.GetWorldCenter());\n\t}\n\n\tapplyImpulse = ([x,y]) => {\n\t\tif(!this.body){\n\t\t\treturn;\n\t\t}\n\t\tthis.body.ApplyLinearImpulse(new b2Vec2(x,y),this.body.GetWorldCenter());\n\t}\t\n\n\tcomponentWillUnmount() {\n\t\t//console.log('component unmounting',this.body);\n\t\tif(this.body){\n\n\t\t\tlet userData = this.body.GetUserData();\n\t\t\tuserData.removed = true;\n\t\t\tthis.body.SetUserData(userData);\n\t\t\tthis.body.SetAwake(true);\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif('waitFor' in this.props){\n\t\t\tif(this.props.waitFor){\n\t\t\t\tthis.physicsInit();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.physicsInit();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif(!('waitFor' in this.props)){\n\t\t\treturn;\n\t\t}\n\n\t\tif(this.state.physicsInited){\n\t\t\treturn;\n\t\t}\n\n\t\tif(this.props.waitFor){\n\t\t\tthis.physicsInit();\n\t\t}\n\t}\n\n\trender() {\n\t\tlet {physicsInited,domHeight,domWidth,circleRadius} = this.state;\n\t\tlet {hideUntil=true} = this.props;\n\t\tlet {style = {}} = this.props.children.props;\n\n\t\tconst styles = (physicsInited)?{position:'absolute',display:'block',left:0,top:0,height:domHeight,width:domWidth,willChange:'transform'}:(hideUntil?{visibility:'hidden'}:{});\n\n\t\t\n\t\tif(physicsInited && circleRadius){\n\t\t\tstyles.borderRadius=circleRadius;\n\t\t}\n\t\treturn React.cloneElement(this.props.children,{ref:(el)=>{\n\t\t\tthis.el = el;\n\t\t},style: {...style,...styles}});\n\t}\n\n}\n\nBox2dObject.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\theight: PropTypes.number,\n\twidth: PropTypes.number,\n\tleft: PropTypes.number,\n\ttop: PropTypes.number,\n\tdensity: PropTypes.number,\n\tfriction: PropTypes.number,\n\trestitution: PropTypes.number,\n\tbullet: PropTypes.bool,\n\tonBeginContact: PropTypes.func,\n\tonEndContact: PropTypes.func,\n\tshape: PropTypes.oneOf(['circle','box']),\n\tinitialForce: TWO_NUMBERS_OPTIONAL,\n\tinitialImpulse: TWO_NUMBERS_OPTIONAL,\n\tcategory: PropTypes.string,\n};\n\nexport default Box2dObject;"]}]}