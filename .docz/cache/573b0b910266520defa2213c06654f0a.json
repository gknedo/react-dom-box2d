{"remainingRequest":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-react-jsx\",[\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/nagarajan/portable/projects/react-dom-box2d/src/ContactUtils.js","dependencies":[{"path":"/home/nagarajan/portable/projects/react-dom-box2d/src/ContactUtils.js","mtime":1545872706774},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nagarajan/portable/projects/react-dom-box2d/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nexport function getBodyACategory() {\n  return this.contact.GetFixtureA().m_body.GetUserData().category;\n}\nexport function getBodyBCategory() {\n  return this.contact.GetFixtureB().m_body.GetUserData().category;\n} //this is unreliable\n// export function getApproxImpactFromContact () {\n// \tconst contact = this.contact,\n// \t\tSCALE = this.SCALE;\n// \tlet impact = 0;\n// \tfor (let i = 0; i < contact.m_manifold.points.length; i++) {\n// \t\t//this is actually the impulse required to execute the collision response. I don't know any other simple ways to estimate the impact easily without the presolve /post solve callbacks.\n// \t\timpact+=contact.m_oldManifold.points[i].normalImpulse;\n// \t\t//console.log('impact calc',{impact});\n// \t\t//impact+=contact.m_oldManifold.points[i].tangentImpulse;\n// \t\t//console.log('impact calc',{impact});\n// \t}\n// \t//without multiplying , the value would be like 0.0016655....\n// \treturn impact;\n// };\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getBodyACategory, \"getBodyACategory\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/ContactUtils.js\");\n  reactHotLoader.register(getBodyBCategory, \"getBodyBCategory\", \"/home/nagarajan/portable/projects/react-dom-box2d/src/ContactUtils.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/home/nagarajan/portable/projects/react-dom-box2d/src/ContactUtils.js"],"names":["getBodyACategory","contact","GetFixtureA","m_body","GetUserData","category","getBodyBCategory","GetFixtureB"],"mappings":";;;;;;AAAA,OAAO,SAASA,gBAAT,GAA2B;AACjC,SAAO,KAAKC,OAAL,CAAaC,WAAb,GAA2BC,MAA3B,CAAkCC,WAAlC,GAAgDC,QAAvD;AACA;AAED,OAAO,SAASC,gBAAT,GAA2B;AACjC,SAAO,KAAKL,OAAL,CAAaM,WAAb,GAA2BJ,MAA3B,CAAkCC,WAAlC,GAAgDC,QAAvD;AACA,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;0BAxBgBL,gB;0BAIAM,gB","sourcesContent":["export function getBodyACategory(){\n\treturn this.contact.GetFixtureA().m_body.GetUserData().category;\n}\n\nexport function getBodyBCategory(){\n\treturn this.contact.GetFixtureB().m_body.GetUserData().category;\n}\n\n//this is unreliable\n// export function getApproxImpactFromContact () {\n// \tconst contact = this.contact,\n// \t\tSCALE = this.SCALE;\n\n// \tlet impact = 0;\n// \tfor (let i = 0; i < contact.m_manifold.points.length; i++) {\n// \t\t//this is actually the impulse required to execute the collision response. I don't know any other simple ways to estimate the impact easily without the presolve /post solve callbacks.\n\n// \t\timpact+=contact.m_oldManifold.points[i].normalImpulse;\n// \t\t//console.log('impact calc',{impact});\n// \t\t//impact+=contact.m_oldManifold.points[i].tangentImpulse;\n// \t\t//console.log('impact calc',{impact});\n// \t}\n// \t//without multiplying , the value would be like 0.0016655....\n// \treturn impact;\n// };\n\n"]}]}